name: Godot testing

on: [ push ]

jobs:
  execute-gut:
    name: Run GUT Tests
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - name: Unit Test
      uses: croconut/godot-tester@v5.1
      with:
        # Your Godot version number e.g. 3.2.2
        version: "4.3"
        # Your Godot release type e.g. rc2, beta3
        release_type: "stable"
        # Give relative path to your project.godot, if not in top level of repo
        path: "godot-project"
        # Test against mono version? Default: false
        is-mono: "true"
        # How long to spend on importing assets, don't set if testing is not required
        import-time: "15"
        # How long the test should be run before it's timed out and fails
        test-timeout: "120"
        # Decimal value for minimum passing score e.g. if 88% of tests pass and minimum-pass is 0.8, then action passes.
        minimum-pass: "0.99"
        # Directory containing Gut tests
        test-dir: "res://tests"
        # If instead of running the GUT command line you'd like to run a GUT scene instead: recommended to extend gut's plugin script and exit godot when all tests complete
        # direct-scene: # optional, default is false
        # Set to true to check by assert count instead of tests
        # assert-check: # optional, default is false
        # Maximum number of failing asserts or tests, if this or pass rate fails then the action will fail. Is not checked if you do not set it
        # max-fails: # optional, default is false
        # Full path to your GUT config file, e.g. 'res://<path>/<config>.json'.
        config-file: "res://addons/gut/plugin.cfg"
        # URL where a precompiled, custom Godot binary will be downloaded and used instead of an official Godot binary.
        # custom-godot-dl-url: # optional, default is 
        # Filename to store and read results in XML
        result-output-file: "test_results.xml"
